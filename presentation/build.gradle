apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["compileSDK"]
    buildToolsVersion globalConfiguration["buildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["minSDK"]
        targetSdkVersion globalConfiguration["targetSDK"]
    }

    dexOptions {
        preDexLibraries = false
        dexInProcess = false
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'
        disable 'OldTargetApi'
    }
}

dependencies {

    implementation project(':data-infrastructure')
    implementation project(':domain')

    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    implementation presentationDependencies.kotlin
    implementation presentationDependencies.kotlinReflect
    implementation presentationDependencies.rxJava
    implementation presentationDependencies.rxAndroid
    implementation presentationDependencies.archRuntime
    implementation presentationDependencies.archExtensions

    testImplementation presentationTestDependencies.junit
    testImplementation presentationTestDependencies.mockito
    testImplementation presentationTestDependencies.assertj
}

configurations.all {
    resolutionStrategy {
        forcedModules = [
                rootProject.ext.forceResolution.kotlin,
                rootProject.ext.forceResolution.kotlinReflect
        ]
    }
}